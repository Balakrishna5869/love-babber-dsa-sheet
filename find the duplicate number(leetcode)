class Solution {
public:
    int findDuplicate(vector<int>& nums) {
    //     int n=nums.size();
    //     for(int i=0;i<n-1;i++){
    //         for(int j=i+1;j<n;j++){
    //             if(nums[i]==nums[j]){
    //                 return nums[i];
    //             }
    //         }
    //     }
    //     return -1;

        // approach 2: negitive marking solution
        int n=nums.size();
        int ans=-1;
        for(int i = 0; i < n; i++){
            int index=abs(nums[i]);
            // checking the element is already visited or not
            if(nums[index]<0){
                return index;
            }
            // if it is not visited we mark it as visted by multiplying with -1
            nums[index]=nums[index]*-1;
        }
        return ans;

        // approach 3: 

        // while(nums[0]!=nums[nums[0]]){
        //     swap(nums[0],nums[nums[0]]);
        // }
        // return nums[0];

        


    }
};
